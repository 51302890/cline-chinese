name: "Build Release"  # 更名为 Build（不再用 Publish）

on:
    workflow_dispatch:
        inputs:
            release-type:
                description: "Choose release type (release or pre-release)"
                required: true
                default: "release"
                type: choice
                options:
                    - pre-release
                    - release

permissions:
    contents: write  # 仅需写入权限（用于创建 GitHub Release）

jobs:
    test:
        uses: ./.github/workflows/test.yml

    build:  # 将 publish 任务更名为 build
        needs: test
        name: Build Extension
        runs-on: ubuntu-latest
        environment: build  # 可改为非发布环境

        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.15.1

            # 缓存依赖（保持不变）
            - name: Cache root dependencies
              uses: actions/cache@v4
              id: root-cache
              with:
                  path: node_modules
                  key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}

            - name: Cache webview-ui dependencies
              uses: actions/cache@v4
              id: webview-cache
              with:
                  path: webview-ui/node_modules
                  key: ${{ runner.os }}-npm-webview-${{ hashFiles('webview-ui/package-lock.json') }}

            - name: Install root dependencies
              if: steps.root-cache.outputs.cache-hit != 'true'
              run: npm ci

            - name: Install webview-ui dependencies
              if: steps.webview-cache.outputs.cache-hit != 'true'
              run: cd webview-ui && npm ci

            # 移除 vsce/ovsx 安装（不再需要）
            # - name: Install Publishing Tools
            #   run: npm install -g vsce ovsx

            - name: Get Version
              id: get_version
              run: |
                  VERSION=$(node -p "require('./package.json').version")
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

            - name: Create Git Tag
              id: create_tag
              run: |
                  VERSION=v${{ steps.get_version.outputs.version }}
                  echo "tag=$VERSION" >> $GITHUB_OUTPUT
                  git tag "$VERSION"
                  git push origin "$VERSION"

            # 仅打包，不发布
            - name: Build VSIX Package
              run: |
                  npx vsce package --out "cline-${{ steps.get_version.outputs.version }}.vsix"
                  echo "VSIX built: cline-${{ steps.get_version.outputs.version }}.vsix"

            # 创建 GitHub Release（仅上传 .vsix）
            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.create_tag.outputs.tag }}
                  files: "*.vsix"  # 上传生成的 .vsix 文件
                  generate_release_notes: true
                  prerelease: ${{ github.event.inputs.release-type == 'pre-release' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 使用默认 token
